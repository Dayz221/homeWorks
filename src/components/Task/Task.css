.task__container {
    padding: 15px;
    margin-bottom: 10px;
    background-color: var(--tg-theme-secondary-bg-color);
    border-radius: 20px;
    border: 2px solid var(--tg-theme-section-separator-color);
    cursor: pointer;
}

.task__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.right_side {
    display: flex;
    align-items: center;
}

.subject_name {
    font-size: 17px;
    font-weight: 700;
    color: var(--tg-theme-text-color);
    /* margin-bottom: 4px; */
}

.subject_info {
    display: flex;
    align-items: end;
    gap: 5px 15px;
    flex-wrap: wrap;
    margin-right: 20px;
}

.task_type {
    font-size: 14px;
    font-weight: 400;
    color: var(--tg-theme-accent-text-color);
    /* margin-right: 10px; */
}

.task_data {
    display: flex;
    gap: 5px 10px;
    flex-wrap: wrap;
}

.separator {
    margin: 0 8px;
    font-size: 14px;
    color: var(--tg-theme-hint-color);
}

.task_deadline {
    font-size: 14px;
    font-weight: 400;
    color: var(--tg-theme-hint-color)
}

.task_description__container {
    display: grid;
    grid-template-rows: 0fr;
    min-height: 0;
    overflow: hidden;
    transition: all .3s;
}

.task__container.opened .task_description__container {
    grid-template-rows: 1fr;
}

.task_description {
    background-color: var(--tg-theme-bg-color);
    padding: 12px;
    border-radius: 15px;
    margin-top: 15px;
    white-space: pre-wrap;
}

.task_description__text {
    display: block;
    font-size: 15px;
    color: var(--tg-theme-hint-color);
}

input[type="checkbox"] {
    width: 0;
    height: 0;
    opacity: 0;
    z-index: -1;
    position: absolute;
    left: -9999px;
}

.taskStatusCheckbox {
    width: 22px;
    height: 22px;
    position: relative;
}

.taskStatusCheckbox input[type="checkbox"]+label::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 22px;
    height: 22px;
    border: 2px solid var(--tg-theme-hint-color);
    border-radius: 5px;
    user-select: none;
}

.taskStatusCheckbox input[type="checkbox"]:checked+label::after {
    border-color: var(--tg-theme-button-color);
}

.taskStatusCheckbox input[type="checkbox"]:checked+label::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 12px;
    height: 12px;
    border-radius: 2px;
    background-color: var(--tg-theme-button-color);
}

.patch_task {
    width: 25px;
    height: 25px;
    cursor: pointer;
    margin-right: 10px;
}

.patch_task svg {
    width: 100%;
    height: 100%;
}

.patch_task svg path {
    transition: all .3s;
    fill: var(--tg-theme-hint-color)
}

.patch_task:hover svg path {
    fill: var(--tg-theme-button-color)
}

.task_files__container {
    display: grid;
    gap: 10px;
    margin-top: 10px;
    grid-template-columns: repeat(auto-fill, minmax(180px, auto));
    cursor:auto;
}